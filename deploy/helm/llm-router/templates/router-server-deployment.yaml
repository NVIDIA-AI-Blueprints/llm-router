{{- if .Values.routerServer.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "llm-router.fullname" . }}-router-server
  labels:
    {{- include "llm-router.labels" . | nindent 4 }}
    app.kubernetes.io/component: router-server
spec:
  replicas: {{ .Values.routerServer.replicas }}
  {{- if .Values.routerServer.strategy }}
  strategy:
    {{- toYaml .Values.routerServer.strategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "llm-router.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: router-server
  template:
    metadata:
      labels:
        {{- include "llm-router.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: router-server
    spec:
      {{- if .Values.routerServer.securityContext.pod }}
      securityContext:
        {{- toYaml .Values.routerServer.securityContext.pod | nindent 8 }}
      {{- end }}
      containers:
        - name: router-server
          image: "{{ .Values.global.imageRegistry }}{{ .Values.routerServer.image.repository }}:{{ .Values.routerServer.image.tag }}"
          imagePullPolicy: {{ .Values.routerServer.image.pullPolicy }}
          command:
            - "tritonserver"
            - "--log-verbose=1"
            {{- if .Values.routerServer.modelRepository.path }}
            - "--model-repository={{ .Values.routerServer.modelRepository.path }}"
            {{- end }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            - name: grpc
              containerPort: 8001
              protocol: TCP
            - name: metrics
              containerPort: 8002
              protocol: TCP
          {{- if or .Values.routerServer.modelRepository.cloudAuth.aws.enabled .Values.routerServer.modelRepository.cloudAuth.gcs.enabled .Values.routerServer.modelRepository.cloudAuth.azure.enabled .Values.routerServer.env }}
          env:
            {{- if .Values.routerServer.env }}
            {{- toYaml .Values.routerServer.env | nindent 12 }}
            {{- end }}
            {{- if .Values.routerServer.modelRepository.cloudAuth.aws.enabled }}
            # AWS S3 Authentication
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.routerServer.modelRepository.cloudAuth.aws.secretName }}
                  key: {{ .Values.routerServer.modelRepository.cloudAuth.aws.accessKeySecretKey }}
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.routerServer.modelRepository.cloudAuth.aws.secretName }}
                  key: {{ .Values.routerServer.modelRepository.cloudAuth.aws.secretAccessKeySecretKey }}
            {{- if .Values.routerServer.modelRepository.cloudAuth.aws.regionSecretKey }}
            - name: AWS_DEFAULT_REGION
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.routerServer.modelRepository.cloudAuth.aws.secretName }}
                  key: {{ .Values.routerServer.modelRepository.cloudAuth.aws.regionSecretKey }}
            {{- end }}
            {{- if .Values.routerServer.modelRepository.cloudAuth.aws.sessionTokenSecretKey }}
            - name: AWS_SESSION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.routerServer.modelRepository.cloudAuth.aws.secretName }}
                  key: {{ .Values.routerServer.modelRepository.cloudAuth.aws.sessionTokenSecretKey }}
            {{- end }}
            {{- end }}
            {{- if .Values.routerServer.modelRepository.cloudAuth.gcs.enabled }}
            # Google Cloud Storage Authentication
            - name: GOOGLE_APPLICATION_CREDENTIALS_JSON
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.routerServer.modelRepository.cloudAuth.gcs.secretName }}
                  key: {{ .Values.routerServer.modelRepository.cloudAuth.gcs.serviceAccountKeySecretKey }}
            {{- end }}
            {{- if .Values.routerServer.modelRepository.cloudAuth.azure.enabled }}
            # Azure Blob Storage Authentication
            {{- if .Values.routerServer.modelRepository.cloudAuth.azure.connectionStringSecretKey }}
            - name: AZURE_STORAGE_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.routerServer.modelRepository.cloudAuth.azure.secretName }}
                  key: {{ .Values.routerServer.modelRepository.cloudAuth.azure.connectionStringSecretKey }}
            {{- else }}
            - name: AZURE_STORAGE_ACCOUNT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.routerServer.modelRepository.cloudAuth.azure.secretName }}
                  key: {{ .Values.routerServer.modelRepository.cloudAuth.azure.accountNameSecretKey }}
            - name: AZURE_STORAGE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.routerServer.modelRepository.cloudAuth.azure.secretName }}
                  key: {{ .Values.routerServer.modelRepository.cloudAuth.azure.accountKeySecretKey }}
            {{- end }}
            {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.routerServer.resources | nindent 12 }}
          {{- if .Values.routerServer.healthChecks.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.routerServer.healthChecks.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.routerServer.healthChecks.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.routerServer.healthChecks.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.routerServer.healthChecks.startupProbe }}
          startupProbe:
            {{- toYaml .Values.routerServer.healthChecks.startupProbe | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if .Values.routerServer.volumes.modelRepository.enabled }}
            - name: model-repository
              mountPath: {{ .Values.routerServer.volumes.modelRepository.mountPath }}
            {{- end }}
          {{- if .Values.routerServer.securityContext.container }}
          securityContext:
            {{- toYaml .Values.routerServer.securityContext.container | nindent 12 }}
          {{- end }}
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.global.imagePullSecrets | nindent 8 }}
      {{- end }}
      volumes:
        {{- if .Values.routerServer.volumes.modelRepository.enabled }}
        - name: model-repository
          {{- if .Values.routerServer.volumes.modelRepository.storage.persistentVolumeClaim.enabled }}
          {{- if .Values.routerServer.volumes.modelRepository.storage.persistentVolumeClaim.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.routerServer.volumes.modelRepository.storage.persistentVolumeClaim.existingClaim }}
          {{- else }}
          persistentVolumeClaim:
            claimName: {{ include "llm-router.fullname" . }}-router-server-model-repo
          {{- end }}
          {{- else if .Values.routerServer.volumes.modelRepository.storage.nfs.enabled }}
          nfs:
            server: {{ .Values.routerServer.volumes.modelRepository.storage.nfs.server }}
            path: {{ .Values.routerServer.volumes.modelRepository.storage.nfs.path }}
            readOnly: {{ .Values.routerServer.volumes.modelRepository.storage.nfs.readOnly }}
          {{- else if .Values.routerServer.volumes.modelRepository.storage.hostPath.enabled }}
          hostPath:
            path: {{ .Values.routerServer.volumes.modelRepository.storage.hostPath.path }}
          {{- else }}
          emptyDir:
            {{- if .Values.routerServer.volumes.modelRepository.storage.emptyDir.sizeLimit }}
            sizeLimit: {{ .Values.routerServer.volumes.modelRepository.storage.emptyDir.sizeLimit }}
            {{- end }}
          {{- end }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.routerServer.affinity }}
      affinity:
        {{- toYaml .Values.routerServer.affinity | nindent 8 }}
      {{- else if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }} 