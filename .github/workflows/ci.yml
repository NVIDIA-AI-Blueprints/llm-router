name: Jupyter Notebook Runner

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-notebook:
    runs-on: arc-runner-set-oke-org-nv-ai-bp
    env:
      NOTEBOOK_PATH: ./launchable/1_Deploy_LLM_Router.ipynb
      PYTHON_VERSION: 3.12
    steps:  
      - name: Checkout BP repository
        uses: actions/checkout@v3
     
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            **/*.ipynb
            
      - name: Install dependencies
        env:
          NGC_API_Key: ${{ secrets.NGC_API_KEY }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install papermill
          pip install ipywidgets
          pip install torch
          # Get System Info
          echo "===================== System Info ====================="
          more /etc/os-release
          nvidia-smi
          docker version
          docker compose version
          
      - name: Run Jupyter Notebook
        env:
          NGC_API_Key: ${{ secrets.NGC_API_KEY }}
          NVIDIA_API_KEY: ${{ secrets.NGC_API_KEY }}
          NGC_CLI_API_KEY: ${{ secrets.NGC_API_KEY }}
        run: |
          OUTPUT_NOTEBOOK="result.ipynb"
          echo "Executing notebook: $NOTEBOOK_PATH"
          papermill "$NOTEBOOK_PATH" "$OUTPUT_NOTEBOOK" --log-output --log-level DEBUG
          
      - name: Convert result to html format
        if: always()
        env:
          NGC_API_Key: ${{ secrets.NGC_API_KEY }}
        run: |
          OUTPUT_NOTEBOOK="result.ipynb"
          jupyter nbconvert --to html "$OUTPUT_NOTEBOOK"

      - name: Run Test Code
        env:
          TEST_DOCKER_PULL_KEY: ${{ secrets.TEST_DOCKER_PULL_KEY }}
        run: |
          echo "======================================="
          echo "$TEST_DOCKER_PULL_KEY" |docker login nvcr.io --username  '$oauthtoken' --password-stdin 
          docker run \
            -v ./result.html:/app/input/1_Deploy_LLM_Router.html \
            -v "$(pwd):/workspace" \
            nvcr.io/rw983xdqtcdp/auto_test_team/blueprint-github-test-image:latest \
            pytest -m llm_router --disable-warnings --html=/workspace/llm_router.html

      - name: Upload the result notebook as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: result-notebook
          path: |
             result.html
             /workspace/llm_router.html
          retention-days: 30
